import telebot
import random
from telebot import types
from random import choice

 
bot = telebot.TeleBot("TOKEN")
 
@bot.message_handler(commands=['start', 'help'])
def welcome(message):
    sti = open('welcome.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)
 
    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–° —á–µ–≥–æ –Ω–∞—á–Ω–µ–º? üòâ")
    item2 = types.KeyboardButton("–ù–∞—Å—Ç–æ—è–Ω–∏–µ ü§™")
    item3 = types.KeyboardButton("–ò—Å–ø—ã—Ç–∞–π —É–¥–∞—á—É üé≤")
    item4 = types.KeyboardButton("–ê–Ω–µ–∫–¥–æ—Ç ü§£")
    item5 = types.KeyboardButton("–ö–ª–∏–ø üîä")
    item6 = types.KeyboardButton("–°–æ–≤–µ—Ç üòé")
 
    markup.add(item1, item2, item3, item4, item5, item6)
 
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –ø–æ–æ–±—â–∞—Ç—å—Å—è.".format(message.from_user, bot.get_me()),
        parse_mode='html', reply_markup=markup)
luc = ['–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ, —É–¥–∞—á–∞ –Ω–µ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ!', '–¢–µ–±–µ –ø–æ–≤–µ–∑–ª–æ, —É–¥–∞—á–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ!', '–ù–∏—Ñ–∏–≥–∞ —Ç—ã –Ω–µ–≤–µ–∑—É—á–∏–π, —Ç–µ–±–µ –Ω–∞ —Å—Ç–æ–ª—å–∫–æ –Ω–µ –ø–æ–≤–∑–ª–æ —á—Ç–æ –ª—É—á—à–µ –±—ã —Ç—ã –Ω–µ —Ç—ã–∫–∞–ª –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É!', '–ù–∏—á–µ–≥–æ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –ø–æ–≤–µ–∑–µ—Ç!', '–¢—ã –≤—ã–π–≥—Ä–∞–ª –ê–ê–ê–ê–ê–í–¢–û–ú–û–ë–ò–õ–¨!!!', '–ü–∏–ø–µ—Ü... –°—Ö–æ–¥–∏ –∫ –≥–∞–¥–∞–ª–∫–µ, –Ω–∞ —Ç–µ–±–µ —Å–≥–ª–∞–∑ –Ω–∞ –Ω–µ–≤–µ–∑–µ–Ω–∏–µ', '–ù–∏—Ñ–∏–≥–∞ —Å–µ–±–µ, —Ç–∞–∫–∏—Ö –≤–µ–∑—É—á–∏—Ö —á—É–≤–∞–∫–æ–≤ —è –µ—â–µ –Ω–µ –≤—Å—Ç—Ä–µ—á–∞–ª, –ø–æ–¥–µ–ª–∏—à—å—Å—è —É–¥–∞—á–µ–π???', '–£–î–ê–ß–ê,–£–î–ê–ß–ê,–£–î–ê–ß–ê, –¢–µ–ø–µ—Ä—å —ç—Ç–æ —Ç–≤–æ–µ –≤—Ç–æ—Ä–æ–µ –∏–º—è, –∏–¥–∏ –∏–≥—Ä–∞—Ç—å –≤ –ª–æ—Ç–µ—Ä–µ–π–∫—É!', '–ë–æ–ª—å–Ω–µ –Ω–µ —Ç—ã–∫–∞–π –Ω–∏–∫–æ–≥–¥–∞ —Å—é–¥–∞, —Ç—ã –∑–∞—Ä–∞–∂–∞–µ—à—å –º–µ–Ω—è —Å–≤–æ–∏ –Ω–µ–≤–µ–∑–µ–Ω–∏–µ–º!!!', '–°–µ–≥–æ–¥–Ω—è –Ω–µ —Ç–≤–æ–π –¥–µ–Ω—å...', '–í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –ø–æ–≤–µ–∑–µ—Ç!', '–¢–≤–æ–µ —Å—á–∞—Å—Ç–ª–∏–≤–æ–µ —á–∏—Å–ª–æ 666, –∫–∞–∫ –¥—É–º–∞–µ—à—å —á—Ç–æ —ç—Ç–æ –º–æ–∂–µ –∑–Ω–∞—á–∏—Ç—å?', '–ù–µ –≤–µ–∑–µ–Ω–∏–µ —ç—Ç–æ —Ç–≤–æ–µ –≤—Ç–æ—Ä–æ–µ –∏–º—è', '–¢–µ–±—è —Å–µ–≥–æ–¥–Ω—è –ø–æ—Ü–µ–ª–æ–≤–∞–ª–∞ –±–æ–≥–∏–Ω—è —É–¥–∞—á–∏? –¢—ã —á–µ—Ä—Ç–æ–≤—Å–∫–∏ –≤–µ–∑—É—á–∏–π!', '–°—Ö–æ–¥–∏ –ø—Ä–æ–≤–µ—Ä—Å—è –∫ –≤—Ä–∞—á—É, –≤–æ–∑–º–æ–∂–Ω–æ —Ç—ã —á–µ–º —Ç–æ –±–æ–ª–µ–Ω.']
sup = ['–ù–µ —Å–¥–∞–≤–∞–π—Å—è, –æ–¥–Ω–∞–∂–¥—ã —É —Ç–µ–±—è –≤—Å–µ –ø–æ–ª—É—á–∏—Ç—Å—è!', '–¢–µ–±–µ –±—ã —á—Ç–æ —Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å, –Ω–∞—á–Ω–∏ —Å —Å–µ–±—è!', '–ï—Å–ª–∏ —Ç—ã —Å—á–∏—Ç–∞–µ—à—å —Å–µ–±—è —Å—á–∞—Å—Ç–ª–∏–≤—ã–º, —Å–æ—Ö—Ä–∞–Ω–∏ —ç—Ç–æ –≤—Å–µ–º–∏ —Å–∏–ª–∞–º–∏.', '–ù–µ –º–æ–≥—É –≤—ã—Ä–∞–∑–∏—Ç—å —Å–ª–æ–≤–∞–º–∏ –Ω–∞ —Å–∫–æ–ª—å–∫–æ —Ç—ã –æ—Ñ–∏–≥–µ–Ω–Ω—ã–π, —Ç—É—Ç –¥–∞–∂–µ –º–æ–µ–≥–æ —Å–æ–≤–µ—Ç–∞ –Ω–µ –Ω–∞–¥–æ!', '–ó–∞–π–º–∏—Å—å —Å–æ–±–æ–π.', '–ù–∞–π–¥–∏ —Å–≤–æ—é –ª—é–±–æ–≤—å —Ç–∞–º, –≥–¥–µ –µ—â–µ –Ω–µ –∏—Å–∫–∞–ª!', '–ï—Å–ª–∏ –≤–¥—Ä—É–≥ –Ω–∞—Å—Ç—É–ø–∏–ª–∞ —á–µ—Ä–Ω–∞—è –ø–æ–ª–æ—Å–∞, –æ–∂–∏–¥–∞–π —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –±–µ–ª–∞—è!', '–ï—Å–ª–∏ —á—Ç–æ —Ç–æ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –≤ –º–∏—Ä–µ, –ø–æ–¥—Å—Ç—Ä–æ–π—Å—è –ø–æ–¥ –Ω–µ–≥–æ –∏–ª–∏ –ø–æ–¥—Å—Ç—Ä–æ–π —ç—Ç–æ—Ç –º–∏—Ä –ø–æ–¥ —Å–µ–±—è.', '–ù–µ —É–Ω—ã–≤–∞–π –∏ –Ω–∞ —Ç–≤–æ–π —É–ª–∏—Ü–µ –±—É–¥–µ—Ç –ø—Ä–∞–∑–¥–Ω–∏–∫!']
@bot.message_handler(content_types=['text'])
def lalala(message):
    if message.chat.type == 'private':
        if message.text == '–° —á–µ–≥–æ –Ω–∞—á–Ω–µ–º? üòâ':
            bot.send_message(message.chat.id, '–ê –¥–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —Å —Ç–æ–≥–æ, —á—Ç–æ —è —Å–∫–∞–∂—É –∫–∞–∫–æ–π —Ç–æ –æ—Ñ–∏–≥–µ–Ω–Ω—ã–π, —á—Ç–æ –∑–∞—à–µ–ª –∫–æ –º–Ω–µ –≤ –≥–æ—Å—Ç–∏!')
        elif message.text == '–ù–∞—Å—Ç–æ–µ–Ω–∏–µ ü§™':
 
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–µ–µ", callback_data='good')
            item2 = types.InlineKeyboardButton("–ü–ª–æ—Ö–æ–µ", callback_data='bad')
 
            markup.add(item1, item2)
 
            bot.send_message(message.chat.id, '–ò –∫–∞–∫–æ–µ –∂–µ?', reply_markup=markup)
        elif message.text == '–ò—Å–ø—ã—Ç–∞–π —É–¥–∞—á—É üé≤':
            bot.send_message(message.chat.id, random.choice(luc))
        elif message.text == '–ê–Ω–µ–∫–¥–æ—Ç ü§£':
            bot.send_message(message.chat.id, '- –î–æ–∫—Ç–æ—Ä, —è —Å–µ–±—è —á—É–≤—Å—Ç–≤—É—é, –∫–∞–∫ C++. \n - –≠—Ç–æ –∫–∞–∫?\n - –ú–µ–Ω—è –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ–Ω–∏–º–∞–µ—Ç, –≤—Å–µ –±–æ—è—Ç—Å—è, –∏ –≥–æ–≤–æ—Ä—è—Ç, —á—Ç–æ —è –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω...')
        elif message.text == '–ö–ª–∏–ø üîä':
            bot.send_message(message.chat.id, 'https://www.youtube.com/watch?v=76wzB8-GB98')
        elif message.text == '–°–æ–≤–µ—Ç üòé':
            bot.send_message(message.chat.id, random.choice(sup))
        else:
            bot.send_message(message.chat.id, '–ò–∑–≤–∏–Ω–∏, —è –Ω–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω –Ω–∞ —á—Ç–µ–Ω–∏–µ —ç—Ç–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π üò¢')
 
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, –ø—Ä–æ–¥–æ–ª–∂–∏–º –æ–±—â–µ–Ω–∏–µ –∏ –æ–Ω–æ —Å—Ç–∞–Ω–µ—Ç –µ—â–µ –ª—É—á—à–µ!')
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, –¥–∞–≤–∞–π —è –ø–æ–ø—Ä–æ–±—É—é —Ç–µ–±–µ –µ–≥–æ –ø–æ–¥–Ω—è—Ç—å!?')
 
            # remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ù–∞—Å—Ç–æ—è–Ω–∏–µ ü§™",
                reply_markup=None)
 
            # show alert
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                text="–í—ã–±–æ—Ä —Å–¥–µ–ª–∞–Ω")
 
    except Exception as e:
        print(repr(e))
 
# RUN
bot.polling(none_stop=True)